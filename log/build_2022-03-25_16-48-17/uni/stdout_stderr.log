-- Found ament_cmake: 0.9.9 (/opt/ros/foxy/share/ament_cmake/cmake)
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found rclcpp: 2.4.1 (/opt/ros/foxy/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 1.2.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 1.0.3 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Found srv_alarm_interface: 0.6.0 (/home/dahyeon/dev_ws/install/srv_alarm_interface/share/srv_alarm_interface/cmake)
-- Found ament_lint_auto: 0.9.6 (/opt/ros/foxy/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /home/dahyeon/dev_ws/src/uni/include
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'flake8' to check Python code syntax and style conventions
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/dahyeon/dev_ws/build/uni
[ 75%] [32m[1mLinking CXX executable alarmserver[0m
[ 75%] Built target alarmclient
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o: in function `url_get_proc[abi:cxx11](char const*, int)':
alarmserver.cpp:(.text+0x81f): undefined reference to `Json::Reader::Reader()'
/usr/bin/ld: alarmserver.cpp:(.text+0x833): undefined reference to `Json::Value::Value(Json::ValueType)'
/usr/bin/ld: alarmserver.cpp:(.text+0x855): undefined reference to `Json::Reader::parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Json::Value&, bool)'
/usr/bin/ld: alarmserver.cpp:(.text+0x86b): undefined reference to `Json::Value::operator[](char const*)'
/usr/bin/ld: alarmserver.cpp:(.text+0x880): undefined reference to `Json::Value::Value(Json::Value const&)'
/usr/bin/ld: alarmserver.cpp:(.text+0x899): undefined reference to `Json::Value::begin()'
/usr/bin/ld: alarmserver.cpp:(.text+0x8b2): undefined reference to `Json::Value::end()'
/usr/bin/ld: alarmserver.cpp:(.text+0x8f1): undefined reference to `Json::Value::operator[](char const*)'
/usr/bin/ld: alarmserver.cpp:(.text+0x906): undefined reference to `Json::Value::Value(Json::Value const&)'
/usr/bin/ld: alarmserver.cpp:(.text+0x91f): undefined reference to `Json::Value::begin()'
/usr/bin/ld: alarmserver.cpp:(.text+0x938): undefined reference to `Json::Value::end()'
/usr/bin/ld: alarmserver.cpp:(.text+0x977): undefined reference to `Json::Value::operator[](char const*)'
/usr/bin/ld: alarmserver.cpp:(.text+0x98c): undefined reference to `Json::Value::Value(Json::Value const&)'
/usr/bin/ld: alarmserver.cpp:(.text+0x9a2): undefined reference to `Json::Value::operator[](char const*)'
/usr/bin/ld: alarmserver.cpp:(.text+0x9b7): undefined reference to `Json::Value::Value(Json::Value const&)'
/usr/bin/ld: alarmserver.cpp:(.text+0x9d0): undefined reference to `Json::Value::asString[abi:cxx11]() const'
/usr/bin/ld: alarmserver.cpp:(.text+0xa37): undefined reference to `Json::Value::~Value()'
/usr/bin/ld: alarmserver.cpp:(.text+0xa46): undefined reference to `Json::Value::~Value()'
/usr/bin/ld: alarmserver.cpp:(.text+0xa69): undefined reference to `Json::Value::~Value()'
/usr/bin/ld: alarmserver.cpp:(.text+0xa7d): undefined reference to `Json::Value::~Value()'
/usr/bin/ld: alarmserver.cpp:(.text+0xa8c): undefined reference to `Json::Value::~Value()'
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o:alarmserver.cpp:(.text+0xb08): more undefined references to `Json::Value::~Value()' follow
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o: in function `Json::ValueIteratorBase::operator!=(Json::ValueIteratorBase const&) const':
alarmserver.cpp:(.text._ZNK4Json17ValueIteratorBaseneERKS0_[_ZNK4Json17ValueIteratorBaseneERKS0_]+0x23): undefined reference to `Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const'
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o: in function `Json::ValueIterator::operator++(int)':
alarmserver.cpp:(.text._ZN4Json13ValueIteratorppEi[_ZN4Json13ValueIteratorppEi]+0x35): undefined reference to `Json::ValueIterator::ValueIterator(Json::ValueIterator const&)'
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o: in function `Json::ValueIterator::operator++()':
alarmserver.cpp:(.text._ZN4Json13ValueIteratorppEv[_ZN4Json13ValueIteratorppEv]+0x18): undefined reference to `Json::ValueIteratorBase::increment()'
/usr/bin/ld: CMakeFiles/alarmserver.dir/src/alarm/alarmserver.cpp.o: in function `Json::ValueIterator::operator*() const':
alarmserver.cpp:(.text._ZNK4Json13ValueIteratordeEv[_ZNK4Json13ValueIteratordeEv]+0x18): undefined reference to `Json::ValueIteratorBase::deref() const'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/alarmserver.dir/build.make:137: alarmserver] Error 1
make[1]: *** [CMakeFiles/Makefile2:107: CMakeFiles/alarmserver.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
